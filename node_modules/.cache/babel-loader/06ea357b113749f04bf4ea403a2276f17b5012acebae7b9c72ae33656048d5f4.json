{"ast":null,"code":"var _jsxFileName = \"/home/nmferrin/Springboard/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const getJokes = useCallback(async () => {\n    try {\n      let newJokes = [];\n      let seenJokes = new Set(jokes.map(j => j.id));\n      while (newJokes.length < numJokesToGet) {\n        const res = await axios.get('https://icanhazdadjoke.com', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n        const {\n          id,\n          joke\n        } = res.data;\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          newJokes.push({\n            id,\n            joke,\n            votes: 0\n          });\n        } else {\n          console.log('duplicate found!');\n        }\n      }\n      setIsLoading(false);\n      setJokes(prevJokes => [...prevJokes, ...newJokes]);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [numJokesToGet]);\n  useEffect(() => {\n    getJokes();\n  }, [getJokes]);\n  const generateNewJokes = useCallback(() => {\n    setIsLoading(true);\n    setJokes([]);\n    getJokes();\n  }, [getJokes]);\n  const vote = useCallback((id, delta) => {\n    setJokes(jokes => jokes.map(joke => joke.id === id ? {\n      ...joke,\n      votes: joke.votes + delta\n    } : joke));\n  }, []);\n  const sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(JokeList, \"23dcJzVNDDzOJU4aIDlTU0gPi4U=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","newJokes","seenJokes","Set","map","j","id","length","res","get","headers","Accept","joke","data","has","add","push","votes","console","log","prevJokes","err","error","generateNewJokes","vote","delta","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/home/nmferrin/Springboard/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\n/** List of jokes. */\nfunction JokeList({ numJokesToGet = 5 }) {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getJokes = useCallback(async () => {\n    try {\n      let newJokes = [];\n      let seenJokes = new Set(jokes.map(j => j.id));\n\n      while (newJokes.length < numJokesToGet) {\n        const res = await axios.get('https://icanhazdadjoke.com', {\n          headers: { Accept: 'application/json' }\n        });\n        const { id, joke } = res.data;\n\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          newJokes.push({ id, joke, votes: 0 });\n        } else {\n          console.log('duplicate found!');\n        }\n      }\n\n      setIsLoading(false);\n      setJokes(prevJokes => [...prevJokes, ...newJokes]);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [numJokesToGet]);\n\n  useEffect(() => {\n    getJokes();\n  }, [getJokes]);\n\n  const generateNewJokes = useCallback(() => {\n    setIsLoading(true);\n    setJokes([]);\n    getJokes();\n  }, [getJokes]);\n\n  const vote = useCallback((id, delta) => {\n    setJokes(jokes =>\n      jokes.map(joke =>\n        joke.id === id ? { ...joke, votes: joke.votes + delta } : joke\n      )\n    );\n  }, []);\n\n  const sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n        Get New Jokes\n      </button>\n\n      {sortedJokes.map(j => (\n        <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n      ))}\n    </div>\n  );\n}\n\nexport default JokeList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}